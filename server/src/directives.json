{
  "acks": {
    "name": "acks",
    "description": "Directive for a list of names.",
    "class": "sphinx.directives.other.Acks",
    "required_arguments": 0,
    "optional_arguments": 0,
    "has_content": true,
    "options": {}
  },
  "admonition": {
    "name": "admonition",
    "description": "",
    "class": "docutils.parsers.rst.directives.admonitions.Admonition",
    "required_arguments": 1,
    "optional_arguments": 0,
    "has_content": true,
    "options": { "class": "class_option", "name": "unchanged" }
  },
  "attention": {
    "name": "attention",
    "description": "",
    "class": "docutils.parsers.rst.directives.admonitions.Attention",
    "required_arguments": 0,
    "optional_arguments": 0,
    "has_content": true,
    "options": { "class": "class_option", "name": "unchanged" }
  },
  "caution": {
    "name": "caution",
    "description": "",
    "class": "docutils.parsers.rst.directives.admonitions.Caution",
    "required_arguments": 0,
    "optional_arguments": 0,
    "has_content": true,
    "options": { "class": "class_option", "name": "unchanged" }
  },
  "centered": {
    "name": "centered",
    "description": "Directive to create a centered line of bold text.",
    "class": "sphinx.directives.other.Centered",
    "required_arguments": 1,
    "optional_arguments": 0,
    "has_content": false,
    "options": {}
  },
  "class": {
    "name": "class",
    "description": "Description of a class-like object (classes, interfaces, exceptions).",
    "class": "sphinx.domains.python.PyClasslike",
    "required_arguments": 1,
    "optional_arguments": 0,
    "has_content": true,
    "options": {
      "noindex": "flag",
      "noindexentry": "flag",
      "module": "unchanged",
      "canonical": "unchanged",
      "annotation": "unchanged",
      "final": "flag"
    }
  },
  "code": {
    "name": "code",
    "description": "Parse and mark up content of a code block.",
    "class": "sphinx.directives.patches.Code",
    "required_arguments": 0,
    "optional_arguments": 1,
    "has_content": true,
    "options": {
      "class": "class_option",
      "force": "flag",
      "name": "unchanged",
      "number-lines": "optional_int"
    }
  },
  "code-block": {
    "name": "code-block",
    "description": "Parse and mark up content of a code block.",
    "class": "sphinx.directives.patches.Code",
    "required_arguments": 0,
    "optional_arguments": 1,
    "has_content": true,
    "options": {
      "class": "class_option",
      "force": "flag",
      "name": "unchanged",
      "number-lines": "optional_int"
    }
  },
  "codeauthor": {
    "name": "codeauthor",
    "description": "Directive to give the name of the author of the current document\nor section. Shown in the output only if the show_authors option is on.",
    "class": "sphinx.directives.other.Author",
    "required_arguments": 1,
    "optional_arguments": 0,
    "has_content": false,
    "options": {}
  },
  "compound": {
    "name": "compound",
    "description": "",
    "class": "docutils.parsers.rst.directives.body.Compound",
    "required_arguments": 0,
    "optional_arguments": 0,
    "has_content": true,
    "options": { "class": "class_option", "name": "unchanged" }
  },
  "container": {
    "name": "container",
    "description": "",
    "class": "docutils.parsers.rst.directives.body.Container",
    "required_arguments": 0,
    "optional_arguments": 1,
    "has_content": true,
    "options": { "name": "unchanged" }
  },
  "contents": {
    "name": "contents",
    "description": "Table of contents.\n\nThe table of contents is generated in two passes: initial parse and\ntransform.  During the initial parse, a 'pending' element is generated\nwhich acts as a placeholder, storing the TOC title and any options\ninternally.  At a later stage in the processing, the 'pending' element is\nreplaced by a 'topic' element, a title and the table of contents proper.",
    "class": "docutils.parsers.rst.directives.parts.Contents",
    "required_arguments": 0,
    "optional_arguments": 1,
    "has_content": false,
    "options": {
      "depth": "nonnegative_int",
      "local": "flag",
      "backlinks": "backlinks",
      "class": "class_option"
    }
  },
  "cssclass": {
    "name": "cssclass",
    "description": "Set a \"class\" attribute on the directive content or the next element.\nWhen applied to the next element, a \"pending\" element is inserted, and a\ntransform does the work later.",
    "class": "docutils.parsers.rst.directives.misc.Class",
    "required_arguments": 1,
    "optional_arguments": 0,
    "has_content": true,
    "options": {}
  },
  "csv-table": {
    "name": "csv-table",
    "description": "The csv-table directive which searches a CSV file from Sphinx project's source\ndirectory when an absolute path is given via :file: option.",
    "class": "sphinx.directives.patches.CSVTable",
    "required_arguments": 0,
    "optional_arguments": 1,
    "has_content": true,
    "options": {
      "header-rows": "nonnegative_int",
      "stub-columns": "nonnegative_int",
      "header": "unchanged",
      "width": "length_or_percentage_or_unitless",
      "widths": "auto_or_other",
      "file": "path",
      "url": "uri",
      "encoding": "encoding",
      "class": "class_option",
      "name": "unchanged",
      "align": "align",
      "delim": "single_char_or_whitespace_or_unicode",
      "keepspace": "flag",
      "quote": "single_char_or_unicode",
      "escape": "single_char_or_unicode"
    }
  },
  "danger": {
    "name": "danger",
    "description": "",
    "class": "docutils.parsers.rst.directives.admonitions.Danger",
    "required_arguments": 0,
    "optional_arguments": 0,
    "has_content": true,
    "options": { "class": "class_option", "name": "unchanged" }
  },
  "date": {
    "name": "date",
    "description": "",
    "class": "docutils.parsers.rst.directives.misc.Date",
    "required_arguments": 0,
    "optional_arguments": 0,
    "has_content": true,
    "options": {}
  },
  "default-domain": {
    "name": "default-domain",
    "description": "Directive to (re-)set the default domain for this source file.",
    "class": "sphinx.directives.DefaultDomain",
    "required_arguments": 1,
    "optional_arguments": 0,
    "has_content": false,
    "options": {}
  },
  "default-role": {
    "name": "default-role",
    "description": "Set the default interpreted text role.  Overridden from docutils.",
    "class": "sphinx.directives.DefaultRole",
    "required_arguments": 0,
    "optional_arguments": 1,
    "has_content": false,
    "options": {}
  },
  "deprecated": {
    "name": "deprecated",
    "description": "Directive to describe a change/addition/deprecation in a specific version.",
    "class": "sphinx.domains.changeset.VersionChange",
    "required_arguments": 1,
    "optional_arguments": 1,
    "has_content": true,
    "options": {}
  },
  "describe": {
    "name": "describe",
    "description": "Directive to describe a class, function or similar object.  Not used\ndirectly, but subclassed (in domain-specific directives) to add custom\nbehavior.",
    "class": "sphinx.directives.ObjectDescription",
    "required_arguments": 1,
    "optional_arguments": 0,
    "has_content": true,
    "options": { "noindex": "flag" }
  },
  "epigraph": {
    "name": "epigraph",
    "description": "",
    "class": "docutils.parsers.rst.directives.body.Epigraph",
    "required_arguments": 0,
    "optional_arguments": 0,
    "has_content": true,
    "options": {}
  },
  "error": {
    "name": "error",
    "description": "",
    "class": "docutils.parsers.rst.directives.admonitions.Error",
    "required_arguments": 0,
    "optional_arguments": 0,
    "has_content": true,
    "options": { "class": "class_option", "name": "unchanged" }
  },
  "figure": {
    "name": "figure",
    "description": "The figure directive which applies `:name:` option to the figure node\ninstead of the image node.",
    "class": "sphinx.directives.patches.Figure",
    "required_arguments": 1,
    "optional_arguments": 0,
    "has_content": true,
    "options": {
      "alt": "unchanged",
      "height": "length_or_unitless",
      "width": "length_or_percentage_or_unitless",
      "scale": "percentage",
      "align": "align",
      "target": "unchanged_required",
      "class": "class_option",
      "name": "unchanged",
      "figwidth": "figwidth_value",
      "figclass": "class_option"
    }
  },
  "footer": {
    "name": "footer",
    "description": "Contents of document footer.",
    "class": "docutils.parsers.rst.directives.parts.Footer",
    "required_arguments": 0,
    "optional_arguments": 0,
    "has_content": true,
    "options": {}
  },
  "header": {
    "name": "header",
    "description": "Contents of document header.",
    "class": "docutils.parsers.rst.directives.parts.Header",
    "required_arguments": 0,
    "optional_arguments": 0,
    "has_content": true,
    "options": {}
  },
  "highlight": {
    "name": "highlight",
    "description": "Directive to set the highlighting language for code blocks, as well\nas the threshold for line numbers.",
    "class": "sphinx.directives.code.Highlight",
    "required_arguments": 1,
    "optional_arguments": 0,
    "has_content": false,
    "options": { "force": "flag", "linenothreshold": "positive_int" }
  },
  "highlights": {
    "name": "highlights",
    "description": "",
    "class": "docutils.parsers.rst.directives.body.Highlights",
    "required_arguments": 0,
    "optional_arguments": 0,
    "has_content": true,
    "options": {}
  },
  "hint": {
    "name": "hint",
    "description": "",
    "class": "docutils.parsers.rst.directives.admonitions.Hint",
    "required_arguments": 0,
    "optional_arguments": 0,
    "has_content": true,
    "options": { "class": "class_option", "name": "unchanged" }
  },
  "hlist": {
    "name": "hlist",
    "description": "Directive for a list that gets compacted horizontally.",
    "class": "sphinx.directives.other.HList",
    "required_arguments": 0,
    "optional_arguments": 0,
    "has_content": true,
    "options": { "columns": "int" }
  },
  "image": {
    "name": "image",
    "description": "",
    "class": "docutils.parsers.rst.directives.images.Image",
    "required_arguments": 1,
    "optional_arguments": 0,
    "has_content": false,
    "options": {
      "alt": "unchanged",
      "height": "length_or_unitless",
      "width": "length_or_percentage_or_unitless",
      "scale": "percentage",
      "align": "align",
      "target": "unchanged_required",
      "class": "class_option",
      "name": "unchanged"
    }
  },
  "important": {
    "name": "important",
    "description": "",
    "class": "docutils.parsers.rst.directives.admonitions.Important",
    "required_arguments": 0,
    "optional_arguments": 0,
    "has_content": true,
    "options": { "class": "class_option", "name": "unchanged" }
  },
  "include": {
    "name": "include",
    "description": "Like the standard \"Include\" directive, but interprets absolute paths\n\"correctly\", i.e. relative to source directory.",
    "class": "sphinx.directives.other.Include",
    "required_arguments": 1,
    "optional_arguments": 0,
    "has_content": false,
    "options": {
      "literal": "flag",
      "code": "unchanged",
      "encoding": "encoding",
      "parser": "parser_name",
      "tab-width": "int",
      "start-line": "int",
      "end-line": "int",
      "start-after": "unchanged_required",
      "end-before": "unchanged_required",
      "number-lines": "unchanged",
      "class": "class_option",
      "name": "unchanged"
    }
  },
  "index": {
    "name": "index",
    "description": "Directive to add entries to the index.",
    "class": "sphinx.domains.index.IndexDirective",
    "required_arguments": 1,
    "optional_arguments": 0,
    "has_content": false,
    "options": { "name": "unchanged" }
  },
  "line-block": {
    "name": "line-block",
    "description": "",
    "class": "docutils.parsers.rst.directives.body.LineBlock",
    "required_arguments": 0,
    "optional_arguments": 0,
    "has_content": true,
    "options": { "class": "class_option", "name": "unchanged" }
  },
  "list-table": {
    "name": "list-table",
    "description": "Implement tables whose data is encoded as a uniform two-level bullet list.\nFor further ideas, see\nhttp://docutils.sf.net/docs/dev/rst/alternatives.html#list-driven-tables",
    "class": "docutils.parsers.rst.directives.tables.ListTable",
    "required_arguments": 0,
    "optional_arguments": 1,
    "has_content": true,
    "options": {
      "header-rows": "nonnegative_int",
      "stub-columns": "nonnegative_int",
      "width": "length_or_percentage_or_unitless",
      "widths": "auto_or_other",
      "class": "class_option",
      "name": "unchanged",
      "align": "align"
    }
  },
  "literalinclude": {
    "name": "literalinclude",
    "description": "Like ``.. include:: :literal:``, but only warns if the include file is\nnot found, and does not raise errors.  Also has several options for\nselecting what to include.",
    "class": "sphinx.directives.code.LiteralInclude",
    "required_arguments": 1,
    "optional_arguments": 0,
    "has_content": false,
    "options": {
      "dedent": "optional_int",
      "linenos": "flag",
      "lineno-start": "int",
      "lineno-match": "flag",
      "tab-width": "int",
      "language": "unchanged_required",
      "force": "flag",
      "encoding": "encoding",
      "pyobject": "unchanged_required",
      "lines": "unchanged_required",
      "start-after": "unchanged_required",
      "end-before": "unchanged_required",
      "start-at": "unchanged_required",
      "end-at": "unchanged_required",
      "prepend": "unchanged_required",
      "append": "unchanged_required",
      "emphasize-lines": "unchanged_required",
      "caption": "unchanged",
      "class": "class_option",
      "name": "unchanged",
      "diff": "unchanged_required"
    }
  },
  "math": {
    "name": "math",
    "description": "A base class for Sphinx directives.\n\nThis class provides helper methods for Sphinx directives.\n\n.. note:: The subclasses of this class might not work with docutils.\n          This class is strongly coupled with Sphinx.",
    "class": "sphinx.directives.patches.MathDirective",
    "required_arguments": 0,
    "optional_arguments": 1,
    "has_content": true,
    "options": {
      "label": "unchanged",
      "name": "unchanged",
      "class": "class_option",
      "nowrap": "flag"
    }
  },
  "meta": {
    "name": "meta",
    "description": "A base class for Sphinx directives.\n\nThis class provides helper methods for Sphinx directives.\n\n.. note:: The subclasses of this class might not work with docutils.\n          This class is strongly coupled with Sphinx.",
    "class": "sphinx.directives.patches.Meta",
    "required_arguments": 0,
    "optional_arguments": 0,
    "has_content": true,
    "options": {}
  },
  "moduleauthor": {
    "name": "moduleauthor",
    "description": "Directive to give the name of the author of the current document\nor section. Shown in the output only if the show_authors option is on.",
    "class": "sphinx.directives.other.Author",
    "required_arguments": 1,
    "optional_arguments": 0,
    "has_content": false,
    "options": {}
  },
  "note": {
    "name": "note",
    "description": "",
    "class": "docutils.parsers.rst.directives.admonitions.Note",
    "required_arguments": 0,
    "optional_arguments": 0,
    "has_content": true,
    "options": { "class": "class_option", "name": "unchanged" }
  },
  "object": {
    "name": "object",
    "description": "Directive to describe a class, function or similar object.  Not used\ndirectly, but subclassed (in domain-specific directives) to add custom\nbehavior.",
    "class": "sphinx.directives.ObjectDescription",
    "required_arguments": 1,
    "optional_arguments": 0,
    "has_content": true,
    "options": { "noindex": "flag" }
  },
  "only": {
    "name": "only",
    "description": "Directive to only include text if the given tag(s) are enabled.",
    "class": "sphinx.directives.other.Only",
    "required_arguments": 1,
    "optional_arguments": 0,
    "has_content": true,
    "options": {}
  },
  "parsed-literal": {
    "name": "parsed-literal",
    "description": "",
    "class": "docutils.parsers.rst.directives.body.ParsedLiteral",
    "required_arguments": 0,
    "optional_arguments": 0,
    "has_content": true,
    "options": { "class": "class_option", "name": "unchanged" }
  },
  "pull-quote": {
    "name": "pull-quote",
    "description": "",
    "class": "docutils.parsers.rst.directives.body.PullQuote",
    "required_arguments": 0,
    "optional_arguments": 0,
    "has_content": true,
    "options": {}
  },
  "raw": {
    "name": "raw",
    "description": "Pass through content unchanged\n\nContent is included in output based on type argument\n\nContent may be included inline (content section of directive) or\nimported from a file or url.",
    "class": "docutils.parsers.rst.directives.misc.Raw",
    "required_arguments": 1,
    "optional_arguments": 0,
    "has_content": true,
    "options": { "file": "path", "url": "uri", "encoding": "encoding" }
  },
  "replace": {
    "name": "replace",
    "description": "",
    "class": "docutils.parsers.rst.directives.misc.Replace",
    "required_arguments": 0,
    "optional_arguments": 0,
    "has_content": true,
    "options": {}
  },
  "restructuredtext-test-directive": {
    "name": "restructuredtext-test-directive",
    "description": "This directive is useful only for testing purposes.",
    "class": "docutils.parsers.rst.directives.misc.TestDirective",
    "required_arguments": 0,
    "optional_arguments": 1,
    "has_content": true,
    "options": { "option": "unchanged_required" }
  },
  "role": {
    "name": "role",
    "description": "",
    "class": "docutils.parsers.rst.directives.misc.Role",
    "required_arguments": 0,
    "optional_arguments": 0,
    "has_content": true,
    "options": {}
  },
  "rst-class": {
    "name": "rst-class",
    "description": "Set a \"class\" attribute on the directive content or the next element.\nWhen applied to the next element, a \"pending\" element is inserted, and a\ntransform does the work later.",
    "class": "docutils.parsers.rst.directives.misc.Class",
    "required_arguments": 1,
    "optional_arguments": 0,
    "has_content": true,
    "options": {}
  },
  "rubric": {
    "name": "rubric",
    "description": "",
    "class": "docutils.parsers.rst.directives.body.Rubric",
    "required_arguments": 1,
    "optional_arguments": 0,
    "has_content": false,
    "options": { "class": "class_option", "name": "unchanged" }
  },
  "sectionauthor": {
    "name": "sectionauthor",
    "description": "Directive to give the name of the author of the current document\nor section. Shown in the output only if the show_authors option is on.",
    "class": "sphinx.directives.other.Author",
    "required_arguments": 1,
    "optional_arguments": 0,
    "has_content": false,
    "options": {}
  },
  "sectnum": {
    "name": "sectnum",
    "description": "Automatic section numbering.",
    "class": "docutils.parsers.rst.directives.parts.Sectnum",
    "required_arguments": 0,
    "optional_arguments": 0,
    "has_content": false,
    "options": {
      "depth": "int",
      "start": "int",
      "prefix": "unchanged_required",
      "suffix": "unchanged_required"
    }
  },
  "seealso": {
    "name": "seealso",
    "description": "An admonition mentioning things to look at as reference.",
    "class": "sphinx.directives.other.SeeAlso",
    "required_arguments": 0,
    "optional_arguments": 0,
    "has_content": true,
    "options": { "class": "class_option", "name": "unchanged" }
  },
  "sidebar": {
    "name": "sidebar",
    "description": "",
    "class": "docutils.parsers.rst.directives.body.Sidebar",
    "required_arguments": 0,
    "optional_arguments": 1,
    "has_content": true,
    "options": {
      "class": "class_option",
      "name": "unchanged",
      "subtitle": "unchanged_required"
    }
  },
  "sourcecode": {
    "name": "sourcecode",
    "description": "Parse and mark up content of a code block.",
    "class": "sphinx.directives.patches.Code",
    "required_arguments": 0,
    "optional_arguments": 1,
    "has_content": true,
    "options": {
      "class": "class_option",
      "force": "flag",
      "name": "unchanged",
      "number-lines": "optional_int"
    }
  },
  "table": {
    "name": "table",
    "description": "Generic table base class.",
    "class": "docutils.parsers.rst.directives.tables.RSTTable",
    "required_arguments": 0,
    "optional_arguments": 1,
    "has_content": true,
    "options": {
      "class": "class_option",
      "name": "unchanged",
      "align": "align",
      "width": "length_or_percentage_or_unitless",
      "widths": "auto_or_other"
    }
  },
  "tabularcolumns": {
    "name": "tabularcolumns",
    "description": "Directive to give an explicit tabulary column definition to LaTeX.",
    "class": "sphinx.directives.other.TabularColumns",
    "required_arguments": 1,
    "optional_arguments": 0,
    "has_content": false,
    "options": {}
  },
  "target-notes": {
    "name": "target-notes",
    "description": "Target footnote generation.",
    "class": "docutils.parsers.rst.directives.references.TargetNotes",
    "required_arguments": 0,
    "optional_arguments": 0,
    "has_content": false,
    "options": { "class": "class_option", "name": "unchanged" }
  },
  "tip": {
    "name": "tip",
    "description": "",
    "class": "docutils.parsers.rst.directives.admonitions.Tip",
    "required_arguments": 0,
    "optional_arguments": 0,
    "has_content": true,
    "options": { "class": "class_option", "name": "unchanged" }
  },
  "title": {
    "name": "title",
    "description": "",
    "class": "docutils.parsers.rst.directives.misc.Title",
    "required_arguments": 1,
    "optional_arguments": 0,
    "has_content": false,
    "options": {}
  },
  "toctree": {
    "name": "toctree",
    "description": "Directive to notify Sphinx about the hierarchical structure of the docs,\nand to include a table-of-contents like tree in the current document.",
    "class": "sphinx.directives.other.TocTree",
    "required_arguments": 0,
    "optional_arguments": 0,
    "has_content": true,
    "options": {
      "maxdepth": "int",
      "name": "unchanged",
      "caption": "unchanged_required",
      "glob": "flag",
      "hidden": "flag",
      "includehidden": "flag",
      "numbered": "int_or_nothing",
      "titlesonly": "flag",
      "reversed": "flag"
    }
  },
  "topic": {
    "name": "topic",
    "description": "",
    "class": "docutils.parsers.rst.directives.body.Topic",
    "required_arguments": 1,
    "optional_arguments": 0,
    "has_content": true,
    "options": { "class": "class_option", "name": "unchanged" }
  },
  "unicode": {
    "name": "unicode",
    "description": "Convert Unicode character codes (numbers) to characters.  Codes may be\ndecimal numbers, hexadecimal numbers (prefixed by ``0x``, ``x``, ``\\x``,\n``U+``, ``u``, or ``\\u``; e.g. ``U+262E``), or XML-style numeric character\nentities (e.g. ``&#x262E;``).  Text following \"..\" is a comment and is\nignored.  Spaces are ignored, and any other text remains as-is.",
    "class": "docutils.parsers.rst.directives.misc.Unicode",
    "required_arguments": 1,
    "optional_arguments": 0,
    "has_content": false,
    "options": { "trim": "flag", "ltrim": "flag", "rtrim": "flag" }
  },
  "versionadded": {
    "name": "versionadded",
    "description": "Directive to describe a change/addition/deprecation in a specific version.",
    "class": "sphinx.domains.changeset.VersionChange",
    "required_arguments": 1,
    "optional_arguments": 1,
    "has_content": true,
    "options": {}
  },
  "versionchanged": {
    "name": "versionchanged",
    "description": "Directive to describe a change/addition/deprecation in a specific version.",
    "class": "sphinx.domains.changeset.VersionChange",
    "required_arguments": 1,
    "optional_arguments": 1,
    "has_content": true,
    "options": {}
  },
  "warning": {
    "name": "warning",
    "description": "",
    "class": "docutils.parsers.rst.directives.admonitions.Warning",
    "required_arguments": 0,
    "optional_arguments": 0,
    "has_content": true,
    "options": { "class": "class_option", "name": "unchanged" }
  },
  "c:alias": {
    "name": "c:alias",
    "description": "Directive to describe a class, function or similar object.  Not used\ndirectly, but subclassed (in domain-specific directives) to add custom\nbehavior.",
    "class": "sphinx.domains.c.CAliasObject",
    "required_arguments": 1,
    "optional_arguments": 0,
    "has_content": true,
    "options": { "maxdepth": "nonnegative_int", "noroot": "flag" }
  },
  "c:enum": {
    "name": "c:enum",
    "description": "Description of a C language object.",
    "class": "sphinx.domains.c.CEnumObject",
    "required_arguments": 1,
    "optional_arguments": 0,
    "has_content": true,
    "options": { "noindexentry": "flag" }
  },
  "c:enumerator": {
    "name": "c:enumerator",
    "description": "Description of a C language object.",
    "class": "sphinx.domains.c.CEnumeratorObject",
    "required_arguments": 1,
    "optional_arguments": 0,
    "has_content": true,
    "options": { "noindexentry": "flag" }
  },
  "c:function": {
    "name": "c:function",
    "description": "Description of a C language object.",
    "class": "sphinx.domains.c.CFunctionObject",
    "required_arguments": 1,
    "optional_arguments": 0,
    "has_content": true,
    "options": { "noindexentry": "flag" }
  },
  "c:macro": {
    "name": "c:macro",
    "description": "Description of a C language object.",
    "class": "sphinx.domains.c.CMacroObject",
    "required_arguments": 1,
    "optional_arguments": 0,
    "has_content": true,
    "options": { "noindexentry": "flag" }
  },
  "c:member": {
    "name": "c:member",
    "description": "Description of a C language object.",
    "class": "sphinx.domains.c.CMemberObject",
    "required_arguments": 1,
    "optional_arguments": 0,
    "has_content": true,
    "options": { "noindexentry": "flag" }
  },
  "c:namespace": {
    "name": "c:namespace",
    "description": "This directive is just to tell Sphinx that we're documenting stuff in\nnamespace foo.",
    "class": "sphinx.domains.c.CNamespaceObject",
    "required_arguments": 1,
    "optional_arguments": 0,
    "has_content": false,
    "options": {}
  },
  "c:namespace-pop": {
    "name": "c:namespace-pop",
    "description": "A base class for Sphinx directives.\n\nThis class provides helper methods for Sphinx directives.\n\n.. note:: The subclasses of this class might not work with docutils.\n          This class is strongly coupled with Sphinx.",
    "class": "sphinx.domains.c.CNamespacePopObject",
    "required_arguments": 0,
    "optional_arguments": 0,
    "has_content": false,
    "options": {}
  },
  "c:namespace-push": {
    "name": "c:namespace-push",
    "description": "A base class for Sphinx directives.\n\nThis class provides helper methods for Sphinx directives.\n\n.. note:: The subclasses of this class might not work with docutils.\n          This class is strongly coupled with Sphinx.",
    "class": "sphinx.domains.c.CNamespacePushObject",
    "required_arguments": 1,
    "optional_arguments": 0,
    "has_content": false,
    "options": {}
  },
  "c:struct": {
    "name": "c:struct",
    "description": "Description of a C language object.",
    "class": "sphinx.domains.c.CStructObject",
    "required_arguments": 1,
    "optional_arguments": 0,
    "has_content": true,
    "options": { "noindexentry": "flag" }
  },
  "c:type": {
    "name": "c:type",
    "description": "Description of a C language object.",
    "class": "sphinx.domains.c.CTypeObject",
    "required_arguments": 1,
    "optional_arguments": 0,
    "has_content": true,
    "options": { "noindexentry": "flag" }
  },
  "c:union": {
    "name": "c:union",
    "description": "Description of a C language object.",
    "class": "sphinx.domains.c.CUnionObject",
    "required_arguments": 1,
    "optional_arguments": 0,
    "has_content": true,
    "options": { "noindexentry": "flag" }
  },
  "c:var": {
    "name": "c:var",
    "description": "Description of a C language object.",
    "class": "sphinx.domains.c.CMemberObject",
    "required_arguments": 1,
    "optional_arguments": 0,
    "has_content": true,
    "options": { "noindexentry": "flag" }
  },
  "cpp:alias": {
    "name": "cpp:alias",
    "description": "Directive to describe a class, function or similar object.  Not used\ndirectly, but subclassed (in domain-specific directives) to add custom\nbehavior.",
    "class": "sphinx.domains.cpp.CPPAliasObject",
    "required_arguments": 1,
    "optional_arguments": 0,
    "has_content": true,
    "options": { "maxdepth": "nonnegative_int", "noroot": "flag" }
  },
  "cpp:class": {
    "name": "cpp:class",
    "description": "Description of a C++ language object.",
    "class": "sphinx.domains.cpp.CPPClassObject",
    "required_arguments": 1,
    "optional_arguments": 0,
    "has_content": true,
    "options": { "noindexentry": "flag", "tparam-line-spec": "flag" }
  },
  "cpp:concept": {
    "name": "cpp:concept",
    "description": "Description of a C++ language object.",
    "class": "sphinx.domains.cpp.CPPConceptObject",
    "required_arguments": 1,
    "optional_arguments": 0,
    "has_content": true,
    "options": { "noindexentry": "flag", "tparam-line-spec": "flag" }
  },
  "cpp:enum": {
    "name": "cpp:enum",
    "description": "Description of a C++ language object.",
    "class": "sphinx.domains.cpp.CPPEnumObject",
    "required_arguments": 1,
    "optional_arguments": 0,
    "has_content": true,
    "options": { "noindexentry": "flag", "tparam-line-spec": "flag" }
  },
  "cpp:enum-class": {
    "name": "cpp:enum-class",
    "description": "Description of a C++ language object.",
    "class": "sphinx.domains.cpp.CPPEnumObject",
    "required_arguments": 1,
    "optional_arguments": 0,
    "has_content": true,
    "options": { "noindexentry": "flag", "tparam-line-spec": "flag" }
  },
  "cpp:enum-struct": {
    "name": "cpp:enum-struct",
    "description": "Description of a C++ language object.",
    "class": "sphinx.domains.cpp.CPPEnumObject",
    "required_arguments": 1,
    "optional_arguments": 0,
    "has_content": true,
    "options": { "noindexentry": "flag", "tparam-line-spec": "flag" }
  },
  "cpp:enumerator": {
    "name": "cpp:enumerator",
    "description": "Description of a C++ language object.",
    "class": "sphinx.domains.cpp.CPPEnumeratorObject",
    "required_arguments": 1,
    "optional_arguments": 0,
    "has_content": true,
    "options": { "noindexentry": "flag", "tparam-line-spec": "flag" }
  },
  "cpp:function": {
    "name": "cpp:function",
    "description": "Description of a C++ language object.",
    "class": "sphinx.domains.cpp.CPPFunctionObject",
    "required_arguments": 1,
    "optional_arguments": 0,
    "has_content": true,
    "options": { "noindexentry": "flag", "tparam-line-spec": "flag" }
  },
  "cpp:member": {
    "name": "cpp:member",
    "description": "Description of a C++ language object.",
    "class": "sphinx.domains.cpp.CPPMemberObject",
    "required_arguments": 1,
    "optional_arguments": 0,
    "has_content": true,
    "options": { "noindexentry": "flag", "tparam-line-spec": "flag" }
  },
  "cpp:namespace": {
    "name": "cpp:namespace",
    "description": "This directive is just to tell Sphinx that we're documenting stuff in\nnamespace foo.",
    "class": "sphinx.domains.cpp.CPPNamespaceObject",
    "required_arguments": 1,
    "optional_arguments": 0,
    "has_content": false,
    "options": {}
  },
  "cpp:namespace-pop": {
    "name": "cpp:namespace-pop",
    "description": "A base class for Sphinx directives.\n\nThis class provides helper methods for Sphinx directives.\n\n.. note:: The subclasses of this class might not work with docutils.\n          This class is strongly coupled with Sphinx.",
    "class": "sphinx.domains.cpp.CPPNamespacePopObject",
    "required_arguments": 0,
    "optional_arguments": 0,
    "has_content": false,
    "options": {}
  },
  "cpp:namespace-push": {
    "name": "cpp:namespace-push",
    "description": "A base class for Sphinx directives.\n\nThis class provides helper methods for Sphinx directives.\n\n.. note:: The subclasses of this class might not work with docutils.\n          This class is strongly coupled with Sphinx.",
    "class": "sphinx.domains.cpp.CPPNamespacePushObject",
    "required_arguments": 1,
    "optional_arguments": 0,
    "has_content": false,
    "options": {}
  },
  "cpp:struct": {
    "name": "cpp:struct",
    "description": "Description of a C++ language object.",
    "class": "sphinx.domains.cpp.CPPClassObject",
    "required_arguments": 1,
    "optional_arguments": 0,
    "has_content": true,
    "options": { "noindexentry": "flag", "tparam-line-spec": "flag" }
  },
  "cpp:type": {
    "name": "cpp:type",
    "description": "Description of a C++ language object.",
    "class": "sphinx.domains.cpp.CPPTypeObject",
    "required_arguments": 1,
    "optional_arguments": 0,
    "has_content": true,
    "options": { "noindexentry": "flag", "tparam-line-spec": "flag" }
  },
  "cpp:union": {
    "name": "cpp:union",
    "description": "Description of a C++ language object.",
    "class": "sphinx.domains.cpp.CPPUnionObject",
    "required_arguments": 1,
    "optional_arguments": 0,
    "has_content": true,
    "options": { "noindexentry": "flag", "tparam-line-spec": "flag" }
  },
  "cpp:var": {
    "name": "cpp:var",
    "description": "Description of a C++ language object.",
    "class": "sphinx.domains.cpp.CPPMemberObject",
    "required_arguments": 1,
    "optional_arguments": 0,
    "has_content": true,
    "options": { "noindexentry": "flag", "tparam-line-spec": "flag" }
  },
  "js:attribute": {
    "name": "js:attribute",
    "description": "Description of a JavaScript object.",
    "class": "sphinx.domains.javascript.JSObject",
    "required_arguments": 1,
    "optional_arguments": 0,
    "has_content": true,
    "options": { "noindex": "flag", "noindexentry": "flag" }
  },
  "js:class": {
    "name": "js:class",
    "description": "Like a callable but with a different prefix.",
    "class": "sphinx.domains.javascript.JSConstructor",
    "required_arguments": 1,
    "optional_arguments": 0,
    "has_content": true,
    "options": { "noindex": "flag", "noindexentry": "flag" }
  },
  "js:data": {
    "name": "js:data",
    "description": "Description of a JavaScript object.",
    "class": "sphinx.domains.javascript.JSObject",
    "required_arguments": 1,
    "optional_arguments": 0,
    "has_content": true,
    "options": { "noindex": "flag", "noindexentry": "flag" }
  },
  "js:function": {
    "name": "js:function",
    "description": "Description of a JavaScript function, method or constructor.",
    "class": "sphinx.domains.javascript.JSCallable",
    "required_arguments": 1,
    "optional_arguments": 0,
    "has_content": true,
    "options": { "noindex": "flag", "noindexentry": "flag" }
  },
  "js:method": {
    "name": "js:method",
    "description": "Description of a JavaScript function, method or constructor.",
    "class": "sphinx.domains.javascript.JSCallable",
    "required_arguments": 1,
    "optional_arguments": 0,
    "has_content": true,
    "options": { "noindex": "flag", "noindexentry": "flag" }
  },
  "js:module": {
    "name": "js:module",
    "description": "Directive to mark description of a new JavaScript module.\n\nThis directive specifies the module name that will be used by objects that\nfollow this directive.\n\nOptions\n-------\n\nnoindex\n    If the ``noindex`` option is specified, no linkable elements will be\n    created, and the module won't be added to the global module index. This\n    is useful for splitting up the module definition across multiple\n    sections or files.\n\n:param mod_name: Module name",
    "class": "sphinx.domains.javascript.JSModule",
    "required_arguments": 1,
    "optional_arguments": 0,
    "has_content": false,
    "options": { "noindex": "flag" }
  },
  "py:attribute": {
    "name": "py:attribute",
    "description": "Description of an attribute.",
    "class": "sphinx.domains.python.PyAttribute",
    "required_arguments": 1,
    "optional_arguments": 0,
    "has_content": true,
    "options": {
      "noindex": "flag",
      "noindexentry": "flag",
      "module": "unchanged",
      "canonical": "unchanged",
      "annotation": "unchanged",
      "type": "unchanged",
      "value": "unchanged"
    }
  },
  "py:class": {
    "name": "py:class",
    "description": "Description of a class-like object (classes, interfaces, exceptions).",
    "class": "sphinx.domains.python.PyClasslike",
    "required_arguments": 1,
    "optional_arguments": 0,
    "has_content": true,
    "options": {
      "noindex": "flag",
      "noindexentry": "flag",
      "module": "unchanged",
      "canonical": "unchanged",
      "annotation": "unchanged",
      "final": "flag"
    }
  },
  "py:classmethod": {
    "name": "py:classmethod",
    "description": "Description of a classmethod.",
    "class": "sphinx.domains.python.PyClassMethod",
    "required_arguments": 1,
    "optional_arguments": 0,
    "has_content": true,
    "options": {
      "noindex": "flag",
      "noindexentry": "flag",
      "module": "unchanged",
      "canonical": "unchanged",
      "annotation": "unchanged"
    }
  },
  "py:currentmodule": {
    "name": "py:currentmodule",
    "description": "This directive is just to tell Sphinx that we're documenting\nstuff in module foo, but links to module foo won't lead here.",
    "class": "sphinx.domains.python.PyCurrentModule",
    "required_arguments": 1,
    "optional_arguments": 0,
    "has_content": false,
    "options": {}
  },
  "py:data": {
    "name": "py:data",
    "description": "Description of a variable.",
    "class": "sphinx.domains.python.PyVariable",
    "required_arguments": 1,
    "optional_arguments": 0,
    "has_content": true,
    "options": {
      "noindex": "flag",
      "noindexentry": "flag",
      "module": "unchanged",
      "canonical": "unchanged",
      "annotation": "unchanged",
      "type": "unchanged",
      "value": "unchanged"
    }
  },
  "py:decorator": {
    "name": "py:decorator",
    "description": "Description of a decorator.",
    "class": "sphinx.domains.python.PyDecoratorFunction",
    "required_arguments": 1,
    "optional_arguments": 0,
    "has_content": true,
    "options": {
      "noindex": "flag",
      "noindexentry": "flag",
      "module": "unchanged",
      "canonical": "unchanged",
      "annotation": "unchanged",
      "async": "flag"
    }
  },
  "py:decoratormethod": {
    "name": "py:decoratormethod",
    "description": "Description of a decoratormethod.",
    "class": "sphinx.domains.python.PyDecoratorMethod",
    "required_arguments": 1,
    "optional_arguments": 0,
    "has_content": true,
    "options": {
      "noindex": "flag",
      "noindexentry": "flag",
      "module": "unchanged",
      "canonical": "unchanged",
      "annotation": "unchanged",
      "abstractmethod": "flag",
      "async": "flag",
      "classmethod": "flag",
      "final": "flag",
      "property": "flag",
      "staticmethod": "flag"
    }
  },
  "py:exception": {
    "name": "py:exception",
    "description": "Description of a class-like object (classes, interfaces, exceptions).",
    "class": "sphinx.domains.python.PyClasslike",
    "required_arguments": 1,
    "optional_arguments": 0,
    "has_content": true,
    "options": {
      "noindex": "flag",
      "noindexentry": "flag",
      "module": "unchanged",
      "canonical": "unchanged",
      "annotation": "unchanged",
      "final": "flag"
    }
  },
  "py:function": {
    "name": "py:function",
    "description": "Description of a function.",
    "class": "sphinx.domains.python.PyFunction",
    "required_arguments": 1,
    "optional_arguments": 0,
    "has_content": true,
    "options": {
      "noindex": "flag",
      "noindexentry": "flag",
      "module": "unchanged",
      "canonical": "unchanged",
      "annotation": "unchanged",
      "async": "flag"
    }
  },
  "py:method": {
    "name": "py:method",
    "description": "Description of a method.",
    "class": "sphinx.domains.python.PyMethod",
    "required_arguments": 1,
    "optional_arguments": 0,
    "has_content": true,
    "options": {
      "noindex": "flag",
      "noindexentry": "flag",
      "module": "unchanged",
      "canonical": "unchanged",
      "annotation": "unchanged",
      "abstractmethod": "flag",
      "async": "flag",
      "classmethod": "flag",
      "final": "flag",
      "property": "flag",
      "staticmethod": "flag"
    }
  },
  "py:module": {
    "name": "py:module",
    "description": "Directive to mark description of a new module.",
    "class": "sphinx.domains.python.PyModule",
    "required_arguments": 1,
    "optional_arguments": 0,
    "has_content": false,
    "options": {
      "platform": "<lambda>",
      "synopsis": "<lambda>",
      "noindex": "flag",
      "deprecated": "flag"
    }
  },
  "py:property": {
    "name": "py:property",
    "description": "Description of an attribute.",
    "class": "sphinx.domains.python.PyProperty",
    "required_arguments": 1,
    "optional_arguments": 0,
    "has_content": true,
    "options": {
      "noindex": "flag",
      "noindexentry": "flag",
      "module": "unchanged",
      "canonical": "unchanged",
      "annotation": "unchanged",
      "abstractmethod": "flag",
      "classmethod": "flag",
      "type": "unchanged"
    }
  },
  "py:staticmethod": {
    "name": "py:staticmethod",
    "description": "Description of a staticmethod.",
    "class": "sphinx.domains.python.PyStaticMethod",
    "required_arguments": 1,
    "optional_arguments": 0,
    "has_content": true,
    "options": {
      "noindex": "flag",
      "noindexentry": "flag",
      "module": "unchanged",
      "canonical": "unchanged",
      "annotation": "unchanged"
    }
  },
  "rst:directive": {
    "name": "rst:directive",
    "description": "Description of a reST directive.",
    "class": "sphinx.domains.rst.ReSTDirective",
    "required_arguments": 1,
    "optional_arguments": 0,
    "has_content": true,
    "options": { "noindex": "flag" }
  },
  "rst:directive:option": {
    "name": "rst:directive:option",
    "description": "Description of an option for reST directive.",
    "class": "sphinx.domains.rst.ReSTDirectiveOption",
    "required_arguments": 1,
    "optional_arguments": 0,
    "has_content": true,
    "options": { "noindex": "flag", "type": "unchanged" }
  },
  "rst:role": {
    "name": "rst:role",
    "description": "Description of a reST role.",
    "class": "sphinx.domains.rst.ReSTRole",
    "required_arguments": 1,
    "optional_arguments": 0,
    "has_content": true,
    "options": { "noindex": "flag" }
  },
  "cmdoption": {
    "name": "std:cmdoption",
    "description": "Description of a command-line option (.. option).",
    "class": "sphinx.domains.std.Cmdoption",
    "required_arguments": 1,
    "optional_arguments": 0,
    "has_content": true,
    "options": { "noindex": "flag" }
  },
  "envvar": {
    "name": "std:envvar",
    "description": "A generic x-ref directive registered with Sphinx.add_object_type().",
    "class": "sphinx.domains.std.EnvVar",
    "required_arguments": 1,
    "optional_arguments": 0,
    "has_content": true,
    "options": { "noindex": "flag" }
  },
  "glossary": {
    "name": "std:glossary",
    "description": "Directive to create a glossary with cross-reference targets for :term:\nroles.",
    "class": "sphinx.domains.std.Glossary",
    "required_arguments": 0,
    "optional_arguments": 0,
    "has_content": true,
    "options": { "sorted": "flag" }
  },
  "option": {
    "name": "std:option",
    "description": "Description of a command-line option (.. option).",
    "class": "sphinx.domains.std.Cmdoption",
    "required_arguments": 1,
    "optional_arguments": 0,
    "has_content": true,
    "options": { "noindex": "flag" }
  },
  "productionlist": {
    "name": "std:productionlist",
    "description": "Directive to list grammar productions.",
    "class": "sphinx.domains.std.ProductionList",
    "required_arguments": 1,
    "optional_arguments": 0,
    "has_content": false,
    "options": {}
  },
  "program": {
    "name": "std:program",
    "description": "Directive to name the program for which options are documented.",
    "class": "sphinx.domains.std.Program",
    "required_arguments": 1,
    "optional_arguments": 0,
    "has_content": false,
    "options": {}
  }
}
